name: CI

on:
  create:
    tags:
      - "*" # run on all tags
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PRE_COMMIT_HOME: $HOME/.cache/pre-commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Define a cache dependency glob
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install dependencies
        run: |
          uv sync --group dev
      - name: Cache pre-commit hooks
        id: pre-commit-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: ${{ runner.os }}-pre-commit-hooks-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-hooks-
      - name: Run pre-commit
        run: |
          uv run pre-commit run --all-files
      - name: Run tests and coverage
        run: |
          uv run python manage.py test
      - name: Minimize uv cache
        run: uv cache prune --ci
